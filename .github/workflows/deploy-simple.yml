name: Simple Deployment

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        port: 22
        command_timeout: 20m
        script: |
          #!/bin/bash
          set -e
          
          echo "🚀 Starting deployment..."
          
          # Find the backend directory
          if [ -d "/home/ubuntu/skinsense-backend" ]; then
            cd /home/ubuntu/skinsense-backend
          elif [ -d "$HOME/skinsense-backend" ]; then
            cd $HOME/skinsense-backend
          else
            echo "❌ Backend directory not found!"
            exit 1
          fi
          
          echo "📥 Pulling latest code..."
          git fetch origin main
          git reset --hard origin/main
          
          # Create .env file from environment variables or use existing
          if [ ! -f .env ]; then
            echo "⚠️ No .env file found. Please create it manually on the server."
          fi
          
          echo "🐳 Starting Docker containers..."
          
          # Check if zero-downtime deployment is available
          if [ -f deploy-zero-downtime.sh ]; then
            chmod +x deploy-zero-downtime.sh
            ./deploy-zero-downtime.sh
          elif [ -f docker-compose.blue-green.yml ]; then
            docker-compose -f docker-compose.blue-green.yml up -d --build
          else
            docker-compose up -d --build
          fi
          
          # Wait for services to start
          echo "⏳ Waiting for services to start..."
          sleep 15
          
          # Check health
          echo "🔍 Checking API health..."
          for i in {1..10}; do
            if curl -f http://localhost:8000/health 2>/dev/null; then
              echo "✅ API is healthy!"
              break
            fi
            echo "Waiting for API to start... (attempt $i/10)"
            sleep 5
          done
          
          # Show running containers
          echo "📊 Running containers:"
          docker ps --format "table {{.Names}}\t{{.Status}}"
          
          echo "✨ Deployment complete!"